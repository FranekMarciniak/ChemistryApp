[{"/home/franciszek/Projects/fullstack/chemionatorX/client/src/App.js":"1","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/BlueprintCreatorPage.js":"2","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseItem.js":"3","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/PlusSign.js":"4","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/exerciseCreator/exerciseCreatorReducer.js":"5","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseTestForm.js":"6","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ExercisesPage.js":"7","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/SmallMiddleArrow.js":"8","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/types.js":"9","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/exerciseCreator/exerciseCreatorState.js":"10","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ListOfExercisesPage.js":"11","/home/franciszek/Projects/fullstack/chemionatorX/client/src/index.js":"12","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ExerciseCreatorPage.js":"13","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/LoginPage.js":"14","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/RegisterPage.js":"15","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Layout.js":"16","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/blueprintCreator/blueprintCreatorState.js":"17","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/auth/authState.js":"18","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Wrapper.js":"19","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Header.js":"20","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseCreatorComponents/ExerciseCreatorForm.js":"21","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/MiddleArrow.js":"22","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/RightSide.js":"23","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseName.js":"24","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/HomePage.js":"25","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/PrivateRoute.js":"26","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/BlueprintCreatorComponents/BlueprintForm.js":"27","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/auth/authReducer.js":"28","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/blueprintCreator/blueprintCreatorReducer.js":"29","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/AlertWidget.js":"30","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseCreatorComponents/BlueprintList.js":"31","/home/franciszek/Projects/fullstack/chemionatorX/client/src/util/setTokenToLocalstorage.js":"32","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/LeftSide.js":"33","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/LandingPage.js":"34"},{"size":2334,"mtime":1609688817941,"results":"35","hashOfConfig":"36"},{"size":722,"mtime":1609544951982,"results":"37","hashOfConfig":"36"},{"size":1930,"mtime":1609675574138,"results":"38","hashOfConfig":"36"},{"size":321,"mtime":1607360032000,"results":"39","hashOfConfig":"36"},{"size":3837,"mtime":1609633816087,"results":"40","hashOfConfig":"36"},{"size":4483,"mtime":1609676792438,"results":"41","hashOfConfig":"36"},{"size":736,"mtime":1609614625115,"results":"42","hashOfConfig":"36"},{"size":910,"mtime":1609621016601,"results":"43","hashOfConfig":"36"},{"size":2144,"mtime":1609633574780,"results":"44","hashOfConfig":"36"},{"size":6847,"mtime":1609633689974,"results":"45","hashOfConfig":"36"},{"size":3257,"mtime":1609633852874,"results":"46","hashOfConfig":"36"},{"size":220,"mtime":1608675940536,"results":"47","hashOfConfig":"36"},{"size":813,"mtime":1609544951982,"results":"48","hashOfConfig":"36"},{"size":2422,"mtime":1609688364071,"results":"49","hashOfConfig":"36"},{"size":2892,"mtime":1609688368291,"results":"50","hashOfConfig":"36"},{"size":654,"mtime":1607360032000,"results":"51","hashOfConfig":"36"},{"size":2625,"mtime":1609592414682,"results":"52","hashOfConfig":"36"},{"size":2755,"mtime":1609688772198,"results":"53","hashOfConfig":"36"},{"size":504,"mtime":1609595248562,"results":"54","hashOfConfig":"36"},{"size":6393,"mtime":1609688880275,"results":"55","hashOfConfig":"36"},{"size":2304,"mtime":1609544951982,"results":"56","hashOfConfig":"36"},{"size":1316,"mtime":1607377736942,"results":"57","hashOfConfig":"36"},{"size":910,"mtime":1607360032000,"results":"58","hashOfConfig":"36"},{"size":680,"mtime":1607360032000,"results":"59","hashOfConfig":"36"},{"size":389,"mtime":1608675770766,"results":"60","hashOfConfig":"36"},{"size":572,"mtime":1609689076168,"results":"61","hashOfConfig":"36"},{"size":3641,"mtime":1609592805672,"results":"62","hashOfConfig":"36"},{"size":1007,"mtime":1608656428417,"results":"63","hashOfConfig":"36"},{"size":1056,"mtime":1609544951982,"results":"64","hashOfConfig":"36"},{"size":815,"mtime":1609544951982,"results":"65","hashOfConfig":"36"},{"size":1268,"mtime":1609592667266,"results":"66","hashOfConfig":"36"},{"size":262,"mtime":1609682455274,"results":"67","hashOfConfig":"36"},{"size":903,"mtime":1607360032000,"results":"68","hashOfConfig":"36"},{"size":391,"mtime":1609689927341,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"193d95x",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"87"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/franciszek/Projects/fullstack/chemionatorX/client/src/App.js",["158","159","160","161"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/BlueprintCreatorPage.js",["162"],"import React, { useContext } from \"react\";\nimport Wrapper from \"../components/UniversalComponents/Wrapper\";\nimport BlueprintForm from \"../components/BlueprintCreatorComponents/BlueprintForm\";\nimport AlertWidget from \"../components/UniversalComponents/AlertWidget\";\nimport { BlueprintCreatorContext } from \"../context/blueprintCreator/blueprintCreatorState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction BlueprintCreator() {\n  const blueprintCreatorContext = useContext(BlueprintCreatorContext);\n  const { errors } = blueprintCreatorContext;\n  return (\n    <Wrapper>\n      {errors.length > 0 ? <AlertWidget errors={errors} /> : null}\n      <BlueprintForm />\n    </Wrapper>\n  );\n}\n\nexport default BlueprintCreator;\n",["163","164"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseItem.js",["165","166"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/PlusSign.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/exerciseCreator/exerciseCreatorReducer.js",["167"],"import {\n  SET_CURRENT_BLUEPRINT,\n  CLEAR_CURRENT_BLUEPRINT,\n  SET_EXERCISE_FROM_BLUEPRINT,\n  CHANGE_EXERCISE_LEFT,\n  CHANGE_EXERCISE_RIGHT,\n  CLEAR_CURRENT_EXERCISE,\n  SET_EXERCISE_NAME,\n  SET_EXERCISE_TOP,\n  SET_CURRENT_BLUEPRINT_FROM_API,\n  SET_CURRENT_TEST_EXERCISE,\n  GET_BLUEPRINTS_FROM_API,\n  GET_EXERCISE_FROM_API,\n  GET_ALL_EXERCISES_FROM_API,\n  DELETE_EXERCISES_FROM_API,\n  POST_EXERCISE_TO_API,\n  SET_ERROR,\n  CLEAR_ERROR,\n  CLEAR_ALL,\n} from \"../types.js\";\nexport default (state, action) => {\n  switch (action.type) {\n    case POST_EXERCISE_TO_API:\n      return {\n        ...state,\n      };\n    case SET_CURRENT_BLUEPRINT_FROM_API:\n      return {\n        ...state,\n        currentBlueprint: action.payload,\n      };\n    case GET_BLUEPRINTS_FROM_API:\n      return {\n        ...state,\n        blueprints: action.payload,\n      };\n    case GET_EXERCISE_FROM_API:\n      return {\n        ...state,\n        testExercise: {\n          ...action.payload.exercise,\n          id: action.payload._id,\n        },\n        currentBlueprint: action.payload.blueprint,\n        doneExercises: [...state.doneExercises, action.payload._id],\n      };\n    case SET_CURRENT_TEST_EXERCISE:\n      return {\n        ...state,\n        testExercise: action.payload,\n      };\n\n    case SET_CURRENT_BLUEPRINT:\n      return {\n        ...state,\n        currentBlueprint: action.payload,\n      };\n    case CLEAR_CURRENT_BLUEPRINT:\n      return {\n        ...state,\n        currentBlueprint: {},\n      };\n    case SET_EXERCISE_FROM_BLUEPRINT:\n      return {\n        ...state,\n        currentExercise: action.payload,\n      };\n    case CHANGE_EXERCISE_LEFT:\n      return {\n        ...state,\n        currentExercise: {\n          ...state.currentExercise,\n          leftSide: state.currentExercise.leftSide.map((obj) =>\n            obj.index === action.payload.index ? action.payload : obj\n          ),\n        },\n      };\n    case CHANGE_EXERCISE_RIGHT:\n      return {\n        ...state,\n        currentExercise: {\n          ...state.currentExercise,\n          rightSide: state.currentExercise.rightSide.map((obj) =>\n            obj.index === action.payload.index ? action.payload : obj\n          ),\n        },\n      };\n    case CLEAR_CURRENT_EXERCISE:\n      return {\n        ...state,\n        currentExercise: {\n          ...state.currentExercise,\n          rightSide: state.currentExercise.rightSide.map((obj) => {\n            return { ...obj, ratio: \"\", value: \"\" };\n          }),\n          leftSide: state.currentExercise.leftSide.map((obj) => {\n            return { ...obj, ratio: \"\", value: \"\" };\n          }),\n        },\n      };\n    case SET_EXERCISE_NAME:\n      return {\n        ...state,\n        currentExercise: {\n          ...state.currentExercise,\n          name: action.payload,\n        },\n      };\n    case SET_EXERCISE_TOP:\n      return {\n        ...state,\n        currentExercise: {\n          ...state.currentExercise,\n          top: action.payload,\n        },\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        errors: [\n          ...state.errors,\n          { data: action.payload.data, severity: action.payload.severity },\n        ],\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        errors: [],\n      };\n    case GET_ALL_EXERCISES_FROM_API:\n      return {\n        ...state,\n        allExercises: [...action.payload],\n      };\n    case DELETE_EXERCISES_FROM_API:\n      return {\n        ...state,\n        allExercises: state.allExercises.filter(\n          (blob) => blob._id !== action.payload\n        ),\n      };\n    case CLEAR_ALL:\n      return {\n        ...state,\n        testExercise: {},\n        currentBlueprint: {},\n        blueprints: [],\n        currentExercise: {},\n        errors: [],\n        doneExercises: [],\n        allExercises: [],\n      };\n    default:\n      return { ...state };\n  }\n};\n",["168","169"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseTestForm.js",["170","171"],"import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MiddleArrow from \"../UniversalComponents/MiddleArrow\";\nimport { ExerciseCreatorContext } from \"../../context/exerciseCreator/exerciseCreatorState\";\nimport RightSide from \"./RightSide\";\nimport LeftSide from \"./LeftSide\";\nimport { Button, Typography, Dialog } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ExerciseName from \"./ExerciseName\";\nimport SmallMiddleArrow from \"../../components/UniversalComponents/SmallMiddleArrow\";\nconst ExerciseFormWrapper = styled.div`\n  width: 90%;\n  height: 100px;\n  margin-top: 50px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst ButtonWrapper = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 25px;\n  display: flex;\n  button {\n    margin-left: 15px;\n  }\n`;\n\nfunction ExerciseCreatorForm() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //Using useContext hook to bring in global state\n  const exerciseCreatorContext = useContext(ExerciseCreatorContext);\n  //Destructuring methods from global context\n  const {\n    currentExercise,\n    currentBlueprint,\n    setExerciseFromBlueprint,\n    getTestExerciseFromAPI,\n    postTestExerciseToAPI,\n    testExercise,\n  } = exerciseCreatorContext;\n\n  useEffect(() => {\n    setExerciseFromBlueprint(currentBlueprint);\n  }, [currentBlueprint]);\n  return (\n    <ExerciseFormWrapper>\n      {currentExercise.leftSide !== undefined &&\n      currentExercise.rightSide !== undefined &&\n      currentExercise.rightSide.length > 0 &&\n      currentExercise.leftSide.length > 0 ? (\n        <ExerciseName />\n      ) : (\n        <Typography variant=\"h4\">\n          Hello, click button below to get your first exercise!\n        </Typography>\n      )}\n      <LeftSide />\n      {currentBlueprint.leftSide > 0 && currentBlueprint.rightSide > 0 ? (\n        <MiddleArrow top={currentBlueprint.top} />\n      ) : null}\n      <RightSide />\n      <ButtonWrapper>\n        <Button variant=\"contained\" onClick={getTestExerciseFromAPI}>\n          Get new exercise!\n        </Button>\n        {currentExercise.leftSide === undefined ||\n        currentExercise.leftSide.length > 0 ? (\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n            >\n              Show me the answer\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => postTestExerciseToAPI(currentExercise)}\n            >\n              Check!\n            </Button>\n          </>\n        ) : null}\n      </ButtonWrapper>\n      {testExercise.leftSide !== undefined &&\n      testExercise.rightSide !== undefined &&\n      testExercise.rightSide.length > 0 &&\n      testExercise.leftSide.length > 0 ? (\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{testExercise.name}</DialogTitle>\n          <DialogContent\n            style={{\n              maxWidth: \"600px\",\n              display: \"flex\",\n            }}\n          >\n            <DialogContentText id=\"alert-dialog-description\">\n              {testExercise.leftSide.map((blob, index) => {\n                let last = \" + \";\n                if (index >= testExercise.leftSide.length - 1) {\n                  last = \"\";\n                }\n                return blob.ratio + \" \" + blob.value + last;\n              })}\n            </DialogContentText>\n            <SmallMiddleArrow text={testExercise.top} />\n            <DialogContentText id=\"alert-dialog-description\">\n              {testExercise.rightSide.map((blob, index) => {\n                let last = \" + \";\n                if (index >= testExercise.rightSide.length - 1) {\n                  last = \"\";\n                }\n                return blob.ratio + \" \" + blob.value + last;\n              })}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      ) : null}\n    </ExerciseFormWrapper>\n  );\n}\n\nexport default ExerciseCreatorForm;\n",["172","173"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ExercisesPage.js",["174"],"import React, { useEffect, useContext } from \"react\";\nimport Wrapper from \"../components/UniversalComponents/Wrapper\";\nimport ExerciseTestForm from \"../components/ExerciseComponents/ExerciseTestForm.js\";\nimport { ExerciseCreatorContext } from \"../context/exerciseCreator/exerciseCreatorState\";\nimport AlertWidget from \"../components/UniversalComponents/AlertWidget\";\nfunction ExercisesPage() {\n  const exerciseCreatorContext = useContext(ExerciseCreatorContext);\n  const { clearAll, errors } = exerciseCreatorContext;\n  useEffect(() => {\n    clearAll();\n  }, []);\n  return (\n    <Wrapper>\n      {errors.length > 0 ? <AlertWidget errors={errors} /> : null}\n      <ExerciseTestForm />\n    </Wrapper>\n  );\n}\n\nexport default ExercisesPage;\n",["175","176"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/SmallMiddleArrow.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/types.js",[],["177","178"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/exerciseCreator/exerciseCreatorState.js",["179","180","181","182","183","184","185"],"import {\n  SET_CURRENT_BLUEPRINT,\n  CLEAR_CURRENT_BLUEPRINT,\n  SET_EXERCISE_FROM_BLUEPRINT,\n  CLEAR_CURRENT_EXERCISE,\n  SET_EXERCISE_NAME,\n  SET_EXERCISE_TOP,\n  SET_CURRENT_BLUEPRINT_FROM_API,\n  SET_CURRENT_TEST_EXERCISE,\n  GET_BLUEPRINTS_FROM_API,\n  GET_EXERCISE_FROM_API,\n  POST_EXERCISE_TO_API,\n  SET_ERROR,\n  CLEAR_ERROR,\n  CLEAR_ALL,\n  DELETE_EXERCISES_FROM_API,\n  POST_TEST_EXERCISE_TO_API_FAIL,\n  POST_TEST_EXERCISE_TO_API_SUCCESS,\n  GET_ALL_EXERCISES_FROM_API,\n} from \"../types.js\";\nimport axios from \"axios\";\nimport React, { useReducer, createContext } from \"react\";\nimport ExerciseCreatorReducer from \"./exerciseCreatorReducer\";\nexport const ExerciseCreatorContext = createContext();\nconst { Provider } = ExerciseCreatorContext;\nfunction ExerciseCreatorState(props) {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const initialState = {\n    testExercise: {},\n    currentBlueprint: {},\n    blueprints: [],\n    currentExercise: {},\n    errors: [],\n    doneExercises: [],\n    allExercises: [],\n  };\n  const [state, dispatch] = useReducer(ExerciseCreatorReducer, initialState);\n  const setCurrentBlueprintFromList = (id) => {\n    if (id == \"0\") {\n      dispatch({\n        type: CLEAR_CURRENT_BLUEPRINT,\n      });\n    } else {\n      dispatch({\n        type: SET_CURRENT_BLUEPRINT,\n        payload: state.blueprints.find((blueprint) => blueprint._id == id),\n      });\n    }\n  };\n  const clearCurrentBlueprint = () => {\n    dispatch({\n      type: CLEAR_CURRENT_BLUEPRINT,\n    });\n  };\n  const setExerciseFromBlueprint = (data) => {\n    const obj = {\n      name: \"\",\n      top: data.top === true ? \"\" : false,\n      leftSide: Array(data.leftSide === undefined ? 0 : data.leftSide)\n        .fill(null)\n        .map((slot, index) => {\n          return {\n            ratio: \"\",\n            value: \"\",\n            index,\n          };\n        }),\n      rightSide: Array(data.rightSide === undefined ? 0 : data.rightSide)\n        .fill(null)\n        .map((slot, index) => {\n          return {\n            ratio: \"\",\n            value: \"\",\n            index,\n          };\n        }),\n    };\n\n    dispatch({ type: SET_EXERCISE_FROM_BLUEPRINT, payload: obj });\n  };\n  const updateExercise = (data, type) => {\n    dispatch({ type, payload: data });\n  };\n  const clearCurrentExercise = () => {\n    if (state.currentExercise.rightSide !== undefined) {\n      dispatch({ type: CLEAR_CURRENT_EXERCISE });\n    }\n  };\n  const setExerciseName = (data) => {\n    dispatch({ type: SET_EXERCISE_NAME, payload: data });\n  };\n  const setExerciseTop = (data) => {\n    dispatch({ type: SET_EXERCISE_TOP, payload: data });\n  };\n  const setCurrentBlueprintFromAPI = (data) => {\n    dispatch({\n      type: SET_CURRENT_BLUEPRINT_FROM_API,\n      payload: data,\n    });\n  };\n  const setCurrentTestExercise = (data) => {\n    dispatch({\n      type: SET_CURRENT_TEST_EXERCISE,\n      payload: data,\n    });\n  };\n  const getBlueprintsFromAPI = async () => {\n    try {\n      const res = await axios.get(\"/api/blueprints\", config);\n      dispatch({ type: GET_BLUEPRINTS_FROM_API, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getTestExerciseFromAPI = async () => {\n    try {\n      const res = await axios.get(\"/api/test\", config);\n      dispatch({ type: GET_EXERCISE_FROM_API, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const postTestExerciseToAPI = async (blob) => {\n    const data = {\n      ...blob,\n      id: state.testExercise.id,\n    };\n    try {\n      const res = await axios.post(\"/api/test\", data, config);\n\n      if (res.data == true) {\n        dispatch({\n          type: SET_ERROR,\n          payload: {\n            data: \"Congrats, flawless\",\n            severity: \"success\",\n          },\n        });\n        setTimeout(() => dispatch({ type: CLEAR_ERROR }), 3500);\n      } else if (res.data == false) {\n        dispatch({\n          type: SET_ERROR,\n          payload: {\n            data: \"Something is wrong...\",\n            severity: \"error\",\n          },\n        });\n        setTimeout(() => dispatch({ type: CLEAR_ERROR }), 3500);\n      }\n    } catch (error) {\n      console.log(error.data);\n    }\n  };\n  const postExerciseToAPI = () => {\n    let empty = false;\n    if (state.currentExercise.name === \"\") {\n      dispatch({\n        type: SET_ERROR,\n        payload: { data: \"Set exercise name\", severity: \"warning\" },\n      });\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 3500);\n      return;\n    }\n    state.currentExercise.leftSide.forEach((blob) => {\n      if (blob.value === \"\") {\n        empty = true;\n      }\n    });\n    state.currentExercise.rightSide.forEach((blob) => {\n      if (blob.value === \"\") {\n        empty = true;\n      }\n    });\n    if (empty) {\n      dispatch({\n        type: SET_ERROR,\n        payload: {\n          data: \"All the fields must be filled\",\n          severity: \"warning\",\n        },\n      });\n      setTimeout(() => dispatch({ type: CLEAR_ERROR }), 3500);\n      return;\n    }\n    try {\n      axios.post(\n        \"/api/exercises\",\n        {\n          exercise: state.currentExercise,\n          blueprint: state.currentBlueprint,\n        },\n        config\n      );\n      setExerciseFromBlueprint(state.currentBlueprint);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getAllExercisesFromAPI = async () => {\n    try {\n      const res = await axios.get(\"/api/exercises\", config);\n      dispatch({ type: GET_ALL_EXERCISES_FROM_API, payload: res.data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteExerciseFromAPI = async (id) => {\n    try {\n      const res = await axios.delete(`/api/exercises/${id}`, config);\n      if (res.status === 200) {\n        dispatch({ type: DELETE_EXERCISES_FROM_API, payload: id });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const clearAll = () => {\n    dispatch({ type: CLEAR_ALL });\n  };\n  return (\n    <Provider\n      value={{\n        blueprints: state.blueprints,\n        currentExercise: state.currentExercise,\n        currentBlueprint: state.currentBlueprint,\n        testExercise: state.testExercise,\n        errors: state.errors,\n        doneExercises: state.doneExercises,\n        allExercises: state.allExercises,\n        setCurrentBlueprintFromList,\n        updateExercise,\n        setExerciseFromBlueprint,\n        clearCurrentExercise,\n        setExerciseName,\n        setExerciseTop,\n        setCurrentBlueprintFromAPI,\n        setCurrentTestExercise,\n        clearCurrentBlueprint,\n        getBlueprintsFromAPI,\n        getTestExerciseFromAPI,\n        postExerciseToAPI,\n        postTestExerciseToAPI,\n        getAllExercisesFromAPI,\n        deleteExerciseFromAPI,\n        clearAll,\n      }}\n    >\n      {props.children}\n    </Provider>\n  );\n}\n\nexport default ExerciseCreatorState;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ListOfExercisesPage.js",["186","187","188","189"],"import React, { useContext, useEffect } from \"react\";\nimport Wrapper from \"../components/UniversalComponents/Wrapper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AlertWidget from \"../components/UniversalComponents/AlertWidget\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SmallMiddleArrow from \"../components/UniversalComponents/SmallMiddleArrow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { ExerciseCreatorContext } from \"../context/exerciseCreator/exerciseCreatorState\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableRow,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  Paper,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 850,\n  },\n  iconButton: {\n    padding: 5,\n  },\n  tableRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nfunction ListOfExercises() {\n  const exerciseCreatorContext = useContext(ExerciseCreatorContext);\n  const {\n    getAllExercisesFromAPI,\n    allExercises,\n    deleteExerciseFromAPI,\n  } = exerciseCreatorContext;\n  useEffect(() => {\n    getAllExercisesFromAPI();\n  }, []);\n  const classes = useStyles();\n  return (\n    <Wrapper>\n      <TableContainer component={Paper} className={classes.table}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Name</TableCell>\n              <TableCell align=\"left\">Exercise</TableCell>\n              <TableCell align=\"left\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {allExercises.map((blob) => (\n              <TableRow key={blob._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {blob.exercise.name}\n                </TableCell>\n                <TableCell className={classes.tableRow} align=\"center\">\n                  <Typography>\n                    {blob.exercise.leftSide.map((b, index) => {\n                      let last = \" + \";\n                      if (index >= blob.exercise.leftSide.length - 1) {\n                        last = \"\";\n                      }\n                      return b.ratio + \" \" + b.value + last;\n                    })}\n                  </Typography>\n                  <SmallMiddleArrow text={blob.exercise.top} />\n                  <Typography>\n                    {blob.exercise.rightSide.map((b, index) => {\n                      let last = \" + \";\n                      if (index >= blob.exercise.rightSide.length - 1) {\n                        last = \"\";\n                      }\n                      return b.ratio + \" \" + b.value + last;\n                    })}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <IconButton\n                    className={classes.iconButton}\n                    id={blob._id}\n                    onClick={(e) => deleteExerciseFromAPI(e.currentTarget.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Wrapper>\n  );\n}\n\nexport default ListOfExercises;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/index.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/ExerciseCreatorPage.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/LoginPage.js",["190"],"import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  TextField,\n  Typography,\n  makeStyles,\n  Button,\n  FormControl,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../context/auth/authState\";\n\nconst FormRow = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: flex-end;\n  justify-items: center;\n`;\n\nconst useStyles = makeStyles({\n  textFiled: {\n    marginLeft: \"15px\",\n  },\n  textFiledNumber: {\n    width: \"90px\",\n    marginLeft: \"15px\",\n  },\n  typography: {\n    width: \"150px\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n  },\n  button: {\n    height: \"40px\",\n  },\n});\n\nfunction LoginPage(props) {\n  const authContext = useContext(AuthContext);\n  const classes = useStyles();\n  const [form, setFrom] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  useEffect(() => {\n    if (authContext.isAuthenticated === true) {\n      props.history.push(\"/home\");\n    }\n  }, [authContext.isAuthenticated, props.history]);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    authContext.loginUser({\n      email: form.email.toLowerCase(),\n      password: form.password,\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormRow>\n        <Typography className={classes.typography}>Your email</Typography>\n        <TextField\n          required\n          label=\"Enter your mail\"\n          id=\"email\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className={classes.textFiled}\n          value={form.email}\n          onChange={(e) => setFrom({ ...form, email: e.target.value })}\n        />\n      </FormRow>\n      <FormRow>\n        <Typography className={classes.typography}>Your password</Typography>\n        <TextField\n          required\n          label=\"Ener your password\"\n          id=\"password\"\n          type=\"password\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          className={classes.textFiled}\n          value={form.password}\n          onChange={(e) => setFrom({ ...form, password: e.target.value })}\n        />\n      </FormRow>\n      <FormRow>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          type=\"submit\"\n          className={classes.button}\n          onClick={handleSubmit}\n        >\n          Login\n        </Button>\n      </FormRow>\n    </form>\n  );\n}\nexport default LoginPage;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/RegisterPage.js",["191"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Layout.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/blueprintCreator/blueprintCreatorState.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/auth/authState.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Wrapper.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/Header.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseCreatorComponents/ExerciseCreatorForm.js",["192"],"import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ExerciseCreatorContext } from \"../../context/exerciseCreator/exerciseCreatorState\";\nimport LeftSide from \"../ExerciseComponents/LeftSide\";\nimport RightSide from \"../ExerciseComponents/RightSide\";\nimport MiddleArrow from \"../UniversalComponents/MiddleArrow\";\nimport { Button } from \"@material-ui/core\";\nimport ExerciseCreatorName from \"./ExerciseCreatorName\";\n\nconst ExerciseFormWrapper = styled.div`\n  width: 90%;\n  height: 100px;\n  margin-top: 50px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst ButtonWrapper = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 25px;\n  display: flex;\n`;\n\nfunction ExerciseCreatorForm() {\n  //Using useContext hook to bring in global state\n  const exerciseCreatorContext = useContext(ExerciseCreatorContext);\n  //Destructuring methods from global context\n  const {\n    currentBlueprint,\n    currentExercise,\n    setExerciseFromBlueprint,\n    clearCurrentExercise,\n    postExerciseToAPI,\n  } = exerciseCreatorContext;\n\n  useEffect(() => {\n    //Clearing current exercise in global state\n    clearCurrentExercise();\n    //Takes current blueprint from state and generates \"currentExercise\" boilerplate\n    setExerciseFromBlueprint(currentBlueprint);\n  }, [currentBlueprint]);\n  return (\n    <ExerciseFormWrapper>\n      {/*\n      This if checks if currentExercise has arguments to generate\n      */}\n      {currentExercise.leftSide !== undefined &&\n      currentExercise.rightSide !== undefined &&\n      currentExercise.rightSide.length > 0 &&\n      currentExercise.leftSide.length > 0 ? (\n        <ExerciseCreatorName />\n      ) : null}\n      <LeftSide />\n      {currentBlueprint.leftSide > 0 && currentBlueprint.rightSide > 0 ? (\n        <MiddleArrow top={currentBlueprint.top} />\n      ) : null}\n      <RightSide />\n      {currentBlueprint.leftSide > 0 && currentBlueprint.rightSide > 0 ? (\n        <ButtonWrapper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n            onClick={() => postExerciseToAPI()}\n          >\n            Add exercise\n          </Button>\n        </ButtonWrapper>\n      ) : null}\n    </ExerciseFormWrapper>\n  );\n}\n\nexport default ExerciseCreatorForm;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/MiddleArrow.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/RightSide.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/ExerciseName.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/HomePage.js",["193"],"import React, { useContext, useEffect } from \"react\";\nimport Wrapper from \"../components/UniversalComponents/Wrapper\";\nimport { AuthContext } from \"../context/auth/authState\";\nfunction Home() {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser();\n  }, []);\n  return (\n    <Wrapper>\n      <h1>Hello</h1>\n    </Wrapper>\n  );\n}\n\nexport default Home;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/PrivateRoute.js",["194"],"import React, { useContext, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth/authState\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated } = authContext;\n  useEffect(() => {\n    authContext.loadUser();\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/BlueprintCreatorComponents/BlueprintForm.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/auth/authReducer.js",["195"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types.js\";\nexport default (state, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token); // put token inside local storage\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case AUTH_ERROR:\n      localStorage.removeItem(\"token\"); // remove token on any fail\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/context/blueprintCreator/blueprintCreatorReducer.js",["196","197","198"],"import {\n  SET_BLUEPRINT_NAME,\n  SET_BLUEPRINT_LEFT,\n  SET_BLUEPRINT_RIGHT,\n  SET_BLUEPRINT_TOP,\n  SET_BLUEPRINT_ERROR,\n  CLEAR_BLUEPRINT_ERROR,\n  POST_BLUEPRINT_TO_API,\n  SET_ERROR,\n  CLEAR_ERROR,\n} from \"../types.js\";\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_BLUEPRINT_NAME:\n      return { ...state, name: action.payload };\n    case SET_BLUEPRINT_LEFT:\n      return { ...state, leftSide: parseInt(action.payload) };\n    case SET_BLUEPRINT_RIGHT:\n      return { ...state, rightSide: parseInt(action.payload) };\n    case SET_BLUEPRINT_TOP:\n      return { ...state, top: action.payload };\n    case POST_BLUEPRINT_TO_API:\n      return { name: \"\", leftSide: 0, rightSide: 0, top: false, errors: [] };\n    case SET_ERROR:\n      return {\n        ...state,\n        errors: [\n          ...state.errors,\n          { data: action.payload.data, severity: action.payload.severity },\n        ],\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        errors: [],\n      };\n    default:\n      return { ...state };\n  }\n};\n",["199","200"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/UniversalComponents/AlertWidget.js",[],["201","202"],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseCreatorComponents/BlueprintList.js",["203"],"import React, { useContext, useEffect } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nimport { ExerciseCreatorContext } from \"../../context/exerciseCreator/exerciseCreatorState\";\n\nfunction BlueprintsList() {\n  const exerciseCreatorContext = useContext(ExerciseCreatorContext);\n  const {\n    blueprints,\n    setCurrentBlueprintFromList,\n    currentBlueprint,\n    getBlueprintsFromAPI,\n  } = exerciseCreatorContext;\n  useEffect(() => {\n    setCurrentBlueprintFromList(\"0\");\n    getBlueprintsFromAPI();\n  }, []);\n  return (\n    <>\n      <InputLabel id=\"demo-mutiple-name-label\">Blueprint name</InputLabel>\n      <Select\n        labelId=\"demo-mutiple-name-label\"\n        value={currentBlueprint.name === undefined ? \"0\" : currentBlueprint._id}\n        onChange={(e) => setCurrentBlueprintFromList(e.target.value)}\n      >\n        <MenuItem value=\"0\" key=\"0\">\n          <em>Choose a blueprint</em>\n        </MenuItem>\n        {blueprints.map((blueprint, index) => (\n          <MenuItem value={blueprint._id} key={index + 1}>\n            {blueprint.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </>\n  );\n}\n\nexport default BlueprintsList;\n","/home/franciszek/Projects/fullstack/chemionatorX/client/src/util/setTokenToLocalstorage.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/components/ExerciseComponents/LeftSide.js",[],"/home/franciszek/Projects/fullstack/chemionatorX/client/src/pages/LandingPage.js",["204"],{"ruleId":"205","severity":1,"message":"206","line":3,"column":50,"nodeType":"207","messageId":"208","endLine":3,"endColumn":54},{"ruleId":"205","severity":1,"message":"209","line":17,"column":10,"nodeType":"207","messageId":"208","endLine":17,"endColumn":21},{"ruleId":"205","severity":1,"message":"210","line":19,"column":10,"nodeType":"207","messageId":"208","endLine":19,"endColumn":20},{"ruleId":"205","severity":1,"message":"211","line":19,"column":22,"nodeType":"207","messageId":"208","endLine":19,"endColumn":31},{"ruleId":"205","severity":1,"message":"212","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":13},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":39,"column":6,"nodeType":"219","endLine":39,"endColumn":24,"suggestions":"220"},{"ruleId":"217","severity":1,"message":"221","line":46,"column":6,"nodeType":"219","endLine":46,"endColumn":13,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":21,"column":1,"nodeType":"225","endLine":156,"endColumn":3},{"ruleId":"213","replacedBy":"226"},{"ruleId":"215","replacedBy":"227"},{"ruleId":"205","severity":1,"message":"228","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":21},{"ruleId":"217","severity":1,"message":"229","line":56,"column":6,"nodeType":"219","endLine":56,"endColumn":24,"suggestions":"230"},{"ruleId":"213","replacedBy":"231"},{"ruleId":"215","replacedBy":"232"},{"ruleId":"217","severity":1,"message":"233","line":11,"column":6,"nodeType":"219","endLine":11,"endColumn":8,"suggestions":"234"},{"ruleId":"213","replacedBy":"235"},{"ruleId":"215","replacedBy":"236"},{"ruleId":"213","replacedBy":"237"},{"ruleId":"215","replacedBy":"238"},{"ruleId":"205","severity":1,"message":"239","line":12,"column":3,"nodeType":"207","messageId":"208","endLine":12,"endColumn":23},{"ruleId":"205","severity":1,"message":"240","line":17,"column":3,"nodeType":"207","messageId":"208","endLine":17,"endColumn":33},{"ruleId":"205","severity":1,"message":"241","line":18,"column":3,"nodeType":"207","messageId":"208","endLine":18,"endColumn":36},{"ruleId":"242","severity":1,"message":"243","line":43,"column":12,"nodeType":"244","messageId":"245","endLine":43,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":50,"column":69,"nodeType":"244","messageId":"245","endLine":50,"endColumn":71},{"ruleId":"242","severity":1,"message":"243","line":135,"column":20,"nodeType":"244","messageId":"245","endLine":135,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":144,"column":27,"nodeType":"244","messageId":"245","endLine":144,"endColumn":29},{"ruleId":"205","severity":1,"message":"246","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":19},{"ruleId":"205","severity":1,"message":"247","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":16},{"ruleId":"205","severity":1,"message":"248","line":18,"column":3,"nodeType":"207","messageId":"208","endLine":18,"endColumn":9},{"ruleId":"217","severity":1,"message":"249","line":44,"column":6,"nodeType":"219","endLine":44,"endColumn":8,"suggestions":"250"},{"ruleId":"205","severity":1,"message":"251","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":14},{"ruleId":"205","severity":1,"message":"251","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":14},{"ruleId":"217","severity":1,"message":"252","line":42,"column":6,"nodeType":"219","endLine":42,"endColumn":24,"suggestions":"253"},{"ruleId":"217","severity":1,"message":"254","line":8,"column":6,"nodeType":"219","endLine":8,"endColumn":8,"suggestions":"255"},{"ruleId":"217","severity":1,"message":"254","line":10,"column":6,"nodeType":"219","endLine":10,"endColumn":8,"suggestions":"256"},{"ruleId":"223","severity":1,"message":"224","line":11,"column":1,"nodeType":"225","endLine":47,"endColumn":3},{"ruleId":"205","severity":1,"message":"257","line":6,"column":3,"nodeType":"207","messageId":"208","endLine":6,"endColumn":22},{"ruleId":"205","severity":1,"message":"258","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":12,"column":1,"nodeType":"225","endLine":40,"endColumn":3},{"ruleId":"213","replacedBy":"259"},{"ruleId":"215","replacedBy":"260"},{"ruleId":"213","replacedBy":"261"},{"ruleId":"215","replacedBy":"262"},{"ruleId":"217","severity":1,"message":"263","line":19,"column":6,"nodeType":"219","endLine":19,"endColumn":8,"suggestions":"264"},{"ruleId":"217","severity":1,"message":"254","line":8,"column":6,"nodeType":"219","endLine":8,"endColumn":8,"suggestions":"265"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","no-native-reassign",["266"],"no-negated-in-lhs",["267"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array. If 'setState' needs the current value of 'index', you can also switch to useReducer instead of useState and read 'index' in the reducer.","ArrayExpression",["268"],"React Hook useEffect has missing dependencies: 'side' and 'updateExercise'. Either include them or remove the dependency array.",["269"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["266"],["267"],"'DialogActions' is defined but never used.","React Hook useEffect has a missing dependency: 'setExerciseFromBlueprint'. Either include it or remove the dependency array.",["270"],["266"],["267"],"React Hook useEffect has a missing dependency: 'clearAll'. Either include it or remove the dependency array.",["271"],["266"],["267"],["266"],["267"],"'POST_EXERCISE_TO_API' is defined but never used.","'POST_TEST_EXERCISE_TO_API_FAIL' is defined but never used.","'POST_TEST_EXERCISE_TO_API_SUCCESS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AlertWidget' is defined but never used.","'EditIcon' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllExercisesFromAPI'. Either include it or remove the dependency array.",["272"],"'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'clearCurrentExercise' and 'setExerciseFromBlueprint'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'authContext'. Either include it or remove the dependency array.",["274"],["275"],"'SET_BLUEPRINT_ERROR' is defined but never used.","'CLEAR_BLUEPRINT_ERROR' is defined but never used.",["266"],["267"],["266"],["267"],"React Hook useEffect has missing dependencies: 'getBlueprintsFromAPI' and 'setCurrentBlueprintFromList'. Either include them or remove the dependency array.",["276"],["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"293","fix":"294"},{"desc":"290","fix":"295"},"Update the dependencies array to be: [currentBlueprint, index]",{"range":"296","text":"297"},"Update the dependencies array to be: [side, state, updateExercise]",{"range":"298","text":"299"},"Update the dependencies array to be: [currentBlueprint, setExerciseFromBlueprint]",{"range":"300","text":"301"},"Update the dependencies array to be: [clearAll]",{"range":"302","text":"303"},"Update the dependencies array to be: [getAllExercisesFromAPI]",{"range":"304","text":"305"},"Update the dependencies array to be: [clearCurrentExercise, currentBlueprint, setExerciseFromBlueprint]",{"range":"306","text":"307"},"Update the dependencies array to be: [authContext]",{"range":"308","text":"309"},{"range":"310","text":"309"},"Update the dependencies array to be: [getBlueprintsFromAPI, setCurrentBlueprintFromList]",{"range":"311","text":"312"},{"range":"313","text":"309"},[984,1002],"[currentBlueprint, index]",[1187,1194],"[side, state, updateExercise]",[1682,1700],"[currentBlueprint, setExerciseFromBlueprint]",[559,561],"[clearAll]",[1164,1166],"[getAllExercisesFromAPI]",[1318,1336],"[clearCurrentExercise, currentBlueprint, setExerciseFromBlueprint]",[294,296],"[authContext]",[372,374],[627,629],"[getBlueprintsFromAPI, setCurrentBlueprintFromList]",[294,296]]